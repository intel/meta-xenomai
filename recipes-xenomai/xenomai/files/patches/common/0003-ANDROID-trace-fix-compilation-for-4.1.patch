From 7a135d01be326006d21fd273578f29c18f42c8b2 Mon Sep 17 00:00:00 2001
From: Dmitry Shmidt <dimitrysh@google.com>
Date: Wed, 28 Oct 2015 10:45:04 -0700
Subject: [PATCH 3/6] ANDROID: trace: fix compilation for 4.1

Change-Id: Id88b5d30847bc6d3cfe1d8cd00cbdc975c9712d1
Signed-off-by: Dmitry Shmidt <dimitrysh@google.com>
---
 kernel/trace/trace_output.c | 50 +++++++++++++++++++++++++--------------------
 1 file changed, 28 insertions(+), 22 deletions(-)

diff --git a/kernel/trace/trace_output.c b/kernel/trace/trace_output.c
index d083260..416f7fe 100644
--- a/kernel/trace/trace_output.c
+++ b/kernel/trace/trace_output.c
@@ -920,13 +920,15 @@ static enum print_line_t trace_graph_ent_trace(struct trace_iterator *iter, int
 
 	trace_assign_type(field, iter->ent);
 
-	if (!trace_seq_puts(s, "graph_ent: func="))
+	trace_seq_puts(s, "graph_ent: func=");
+	if (trace_seq_has_overflowed(s))
 		return TRACE_TYPE_PARTIAL_LINE;
 
 	if (!seq_print_ip_sym(s, field->graph_ent.func, flags))
 		return TRACE_TYPE_PARTIAL_LINE;
 
-	if (!trace_seq_puts(s, "\n"))
+	trace_seq_puts(s, "\n");
+	if (trace_seq_has_overflowed(s))
 		return TRACE_TYPE_PARTIAL_LINE;
 
 	return TRACE_TYPE_HANDLED;
@@ -939,9 +941,10 @@ static enum print_line_t trace_graph_ent_raw(struct trace_iterator *iter, int fl
 
 	trace_assign_type(field, iter->ent);
 
-	if (!trace_seq_printf(&iter->seq, "%lx %d\n",
+	trace_seq_printf(&iter->seq, "%lx %d\n",
 			      field->graph_ent.func,
-			      field->graph_ent.depth))
+			      field->graph_ent.depth);
+	if (trace_seq_has_overflowed(&iter->seq))
 		return TRACE_TYPE_PARTIAL_LINE;
 
 	return TRACE_TYPE_HANDLED;
@@ -955,8 +958,8 @@ static enum print_line_t trace_graph_ent_hex(struct trace_iterator *iter, int fl
 
 	trace_assign_type(field, iter->ent);
 
-	SEQ_PUT_HEX_FIELD_RET(s, field->graph_ent.func);
-	SEQ_PUT_HEX_FIELD_RET(s, field->graph_ent.depth);
+	SEQ_PUT_HEX_FIELD(s, field->graph_ent.func);
+	SEQ_PUT_HEX_FIELD(s, field->graph_ent.depth);
 
 	return TRACE_TYPE_HANDLED;
 }
@@ -969,8 +972,8 @@ static enum print_line_t trace_graph_ent_bin(struct trace_iterator *iter, int fl
 
 	trace_assign_type(field, iter->ent);
 
-	SEQ_PUT_FIELD_RET(s, field->graph_ent.func);
-	SEQ_PUT_FIELD_RET(s, field->graph_ent.depth);
+	SEQ_PUT_FIELD(s, field->graph_ent.func);
+	SEQ_PUT_FIELD(s, field->graph_ent.depth);
 
 	return TRACE_TYPE_HANDLED;
 }
@@ -997,13 +1000,15 @@ static enum print_line_t trace_graph_ret_trace(struct trace_iterator *iter, int
 
 	trace_assign_type(field, entry);
 
-	if (!trace_seq_puts(s, "graph_ret: func="))
+	trace_seq_puts(s, "graph_ret: func=");
+	if (trace_seq_has_overflowed(s))
 		return TRACE_TYPE_PARTIAL_LINE;
 
 	if (!seq_print_ip_sym(s, field->ret.func, flags))
 		return TRACE_TYPE_PARTIAL_LINE;
 
-	if (!trace_seq_puts(s, "\n"))
+	trace_seq_puts(s, "\n");
+	if (trace_seq_has_overflowed(s))
 		return TRACE_TYPE_PARTIAL_LINE;
 
 	return TRACE_TYPE_HANDLED;
@@ -1016,12 +1021,13 @@ static enum print_line_t trace_graph_ret_raw(struct trace_iterator *iter, int fl
 
 	trace_assign_type(field, iter->ent);
 
-	if (!trace_seq_printf(&iter->seq, "%lx %lld %lld %ld %d\n",
+	trace_seq_printf(&iter->seq, "%lx %lld %lld %ld %d\n",
 			      field->ret.func,
 			      field->ret.calltime,
 			      field->ret.rettime,
 			      field->ret.overrun,
-			      field->ret.depth));
+			      field->ret.depth);
+	if (trace_seq_has_overflowed(&iter->seq))
 		return TRACE_TYPE_PARTIAL_LINE;
 
 	return TRACE_TYPE_HANDLED;
@@ -1035,11 +1041,11 @@ static enum print_line_t trace_graph_ret_hex(struct trace_iterator *iter, int fl
 
 	trace_assign_type(field, iter->ent);
 
-	SEQ_PUT_HEX_FIELD_RET(s, field->ret.func);
-	SEQ_PUT_HEX_FIELD_RET(s, field->ret.calltime);
-	SEQ_PUT_HEX_FIELD_RET(s, field->ret.rettime);
-	SEQ_PUT_HEX_FIELD_RET(s, field->ret.overrun);
-	SEQ_PUT_HEX_FIELD_RET(s, field->ret.depth);
+	SEQ_PUT_HEX_FIELD(s, field->ret.func);
+	SEQ_PUT_HEX_FIELD(s, field->ret.calltime);
+	SEQ_PUT_HEX_FIELD(s, field->ret.rettime);
+	SEQ_PUT_HEX_FIELD(s, field->ret.overrun);
+	SEQ_PUT_HEX_FIELD(s, field->ret.depth);
 
 	return TRACE_TYPE_HANDLED;
 }
@@ -1052,11 +1058,11 @@ static enum print_line_t trace_graph_ret_bin(struct trace_iterator *iter, int fl
 
 	trace_assign_type(field, iter->ent);
 
-	SEQ_PUT_FIELD_RET(s, field->ret.func);
-	SEQ_PUT_FIELD_RET(s, field->ret.calltime);
-	SEQ_PUT_FIELD_RET(s, field->ret.rettime);
-	SEQ_PUT_FIELD_RET(s, field->ret.overrun);
-	SEQ_PUT_FIELD_RET(s, field->ret.depth);
+	SEQ_PUT_FIELD(s, field->ret.func);
+	SEQ_PUT_FIELD(s, field->ret.calltime);
+	SEQ_PUT_FIELD(s, field->ret.rettime);
+	SEQ_PUT_FIELD(s, field->ret.overrun);
+	SEQ_PUT_FIELD(s, field->ret.depth);
 
 	return TRACE_TYPE_HANDLED;
 }
-- 
1.9.1

